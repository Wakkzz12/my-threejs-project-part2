import{L as R,F as L,t as B,E as G,S as j,P as O,O as _,W as q,n as A,q as H,a as S,T as D}from"./OrbitControls-DuS-ZZ0n.js";import{G as W}from"./lil-gui.esm-ItvJbUpV.js";class I extends R{constructor(t){super(t)}load(t,e,n,d){const a=this,r=new L(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,function(h){const u=a.parse(JSON.parse(h));e&&e(u)},n,d)}parse(t){return new $(t)}}class ${constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],d=N(t,e,this.data);for(let a=0,r=d.length;a<r;a++)n.push(...d[a].toShapes());return n}}function N(o,t,e){const n=Array.from(o),d=t/e.resolution,a=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*d,r=[];let h=0,u=0;for(let i=0;i<n.length;i++){const l=n[i];if(l===`
`)h=0,u-=a;else{const p=J(l,d,h,u,e);h+=p.offsetX,r.push(p.path)}}return r}function J(o,t,e,n,d){const a=d.glyphs[o]||d.glyphs["?"];if(!a){console.error('THREE.Font: character "'+o+'" does not exists in font family '+d.familyName+".");return}const r=new B;let h,u,i,l,p,w,v,M;if(a.o){const s=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let c=0,E=s.length;c<E;)switch(s[c++]){case"m":h=s[c++]*t+e,u=s[c++]*t+n,r.moveTo(h,u);break;case"l":h=s[c++]*t+e,u=s[c++]*t+n,r.lineTo(h,u);break;case"q":i=s[c++]*t+e,l=s[c++]*t+n,p=s[c++]*t+e,w=s[c++]*t+n,r.quadraticCurveTo(p,w,i,l);break;case"b":i=s[c++]*t+e,l=s[c++]*t+n,p=s[c++]*t+e,w=s[c++]*t+n,v=s[c++]*t+e,M=s[c++]*t+n,r.bezierCurveTo(p,w,v,M,i,l);break}}return{offsetX:a.ha*t,path:r}}class U extends G{constructor(t,e={}){const n=e.font;if(n===void 0)super();else{const d=n.generateShapes(t,e.size);e.depth===void 0&&(e.depth=50),e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(d,e)}this.type="TextGeometry"}}const T=new W,k=document.querySelector("canvas.webgl"),g=new j;function Z(){const o=document.createElement("canvas");o.width=256,o.height=256;const t=o.getContext("2d"),e=t.createRadialGradient(128,128,0,128,128,128);return e.addColorStop(0,"#ffffff"),e.addColorStop(.5,"#7300ffff"),e.addColorStop(1,"#3a00ccff"),t.fillStyle=e,t.fillRect(0,0,256,256),new A(o)}const K=Z();console.log("‚úì Matcap texture created!");const x={text:"Hello Three.js!",donutCount:100,regenerate:null},Q=new I,b=["https://threejs.org/examples/fonts/helvetiker_regular.typeface.json","https://cdn.jsdelivr.net/npm/three@0.160.0/examples/fonts/helvetiker_regular.typeface.json","/fonts/helvetiker_regular.typeface.json"];function z(o=0){if(o>=b.length){console.error("‚úó All font loading attempts failed"),V();return}const t=b[o];console.log(`Attempting to load font from: ${t}`),Q.load(t,e=>{console.log("‚úì Font loaded successfully!"),C(e),x.regenerate=()=>C(e),T.add(x,"regenerate").name("Regenerate Scene"),T.add(x,"donutCount",0,300,1).name("Donut Count")},e=>{e.total>0&&console.log("Loading:",Math.round(e.loaded/e.total*100)+"%")},e=>{console.warn(`Failed attempt ${o+1}/${b.length}`),z(o+1)})}function V(){const o=document.createElement("div");o.style.cssText="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; background: rgba(255,0,0,0.9); padding: 30px; border-radius: 10px; z-index: 1000; max-width: 600px; text-align: center; font-family: Arial;",o.innerHTML=`
        <h2>‚ùå Font Loading Failed</h2>
        <p>Could not load font from any source.</p>
        <p style="margin-top: 15px;"><strong>Solution:</strong></p>
        <p>Copy the font file to your project:</p>
        <pre style="background: rgba(0,0,0,0.5); padding: 15px; border-radius: 5px; text-align: left; overflow-x: auto;">mkdir -p static/fonts
cp node_modules/three/examples/fonts/helvetiker_regular.typeface.json static/fonts/</pre>
        <p style="margin-top: 15px;">Then refresh the page</p>
        <button onclick="location.reload()" style="margin-top: 15px; padding: 10px 20px; font-size: 16px; cursor: pointer; background: #4CAF50; color: white; border: none; border-radius: 5px;">Retry</button>
    `,document.body.appendChild(o)}console.log("üîÑ Loading font...");z(0);function C(o){if(!o){console.error("Font is undefined!");return}console.log("Creating 3D scene...");const t=[];g.children.forEach(i=>{i.type==="Mesh"&&t.push(i)}),t.forEach(i=>{i.geometry&&i.geometry.dispose(),i.material&&i.material.dispose(),g.remove(i)});const e=new H({matcap:K}),n=new U(x.text,{font:o,size:.5,depth:.2,curveSegments:12,bevelEnabled:!0,bevelThickness:.03,bevelSize:.02,bevelOffset:0,bevelSegments:5});n.computeBoundingBox();const d=-.5*(n.boundingBox.max.x-n.boundingBox.min.x),a=-.5*(n.boundingBox.max.y-n.boundingBox.min.y),r=-.5*(n.boundingBox.max.z-n.boundingBox.min.z);n.translate(d,a,r);const h=new S(n,e);g.add(h),console.log("‚úì 3D Text created and centered!");const u=new D(.3,.2,20,45);for(let i=0;i<x.donutCount;i++){const l=new S(u,e);l.position.x=(Math.random()-.5)*10,l.position.y=(Math.random()-.5)*10,l.position.z=(Math.random()-.5)*10,l.rotation.x=Math.random()*Math.PI,l.rotation.y=Math.random()*Math.PI;const p=Math.random();l.scale.set(p,p,p),g.add(l)}console.log(`‚úì Created ${x.donutCount} donuts!`),console.log("‚úì Scene ready!")}const f={width:window.innerWidth,height:window.innerHeight},m=new O(75,f.width/f.height,.1,100);m.position.set(1,1,3);g.add(m);const F=new _(m,k);F.enableDamping=!0;const y=new q({canvas:k});y.setSize(f.width,f.height);y.setPixelRatio(Math.min(window.devicePixelRatio,2));window.addEventListener("resize",()=>{f.width=window.innerWidth,f.height=window.innerHeight,m.aspect=f.width/f.height,m.updateProjectionMatrix(),y.setSize(f.width,f.height),y.setPixelRatio(Math.min(window.devicePixelRatio,2))});const P=()=>{F.update(),y.render(g,m),window.requestAnimationFrame(P)};P();console.log("Activity 11: 3D Text - Initializing...");
